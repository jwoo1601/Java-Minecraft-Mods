package jwk.suddensurvival;

import static jwk.suddensurvival.SuddenSurvival.logger;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import cpw.mods.fml.common.ModMetadata;

public class ModInfo {
	
	public static final String ID = "suddensurvival";
	public static final String NAME = "Sudden Survival";
	public static final String MC_VERSION = "1.7.10";
	public static final String DESCRIPTION = "Sudden Survival for Samsik's Relay Contents";
	public static final String AUTHOR = "jwoo__";
	public static final String CREDITS = "Team. 3Kids";
	public static final String URL = "http://jwoop.tistory.com";
	public static final String UPDATE_URL = "";
	
	public static String Version = "1.7.10-DEBUG";
	
	public static final void setupMetadata(ModMetadata data) {
		loadVersionProps();
		
		data.autogenerated = false;
		data.modId = ID;
		data.name = NAME;
		data.version = Version;
		data.description = DESCRIPTION;
		data.authorList.add(AUTHOR);
		data.credits = CREDITS;
		data.url = URL;
		data.updateUrl = UPDATE_URL;
	}
	
	public static final void loadVersionProps() {
		Properties versionProps = new Properties();
		
		try {
			logger.info("Loading Version Properties...");
			
			InputStream input = ModInfo.class.getClassLoader().getResourceAsStream("version.properties");
			if (input == null) {
				logger.warn("Could not find file \'version.properties\'");
				logger.warn("The Version is automatically set to DEBUG");
			}
			
			else {
				versionProps.load(input);
			
				String major = versionProps.getProperty("majorVersion");
				if (major == null) {
					logger.warn("Could not find Property \'majorVersion\'\nThis might occur an fatal error"); return;
				}
			
				String minor = versionProps.getProperty("minorVersion");
				if (minor == null) {
					logger.warn("Could not find Property \'minorVersion\'\nThis might occur an fatal error"); return;
				}
			
				String patch = versionProps.getProperty("patchVersion");
				if (patch == null) {
					logger.warn("Could not find Property \'patchVersion\'\nThis might occur an fatal error"); return;
				}
			
				String buildNum = versionProps.getProperty("buildNum");
				if (buildNum == null)
					logger.warn("Could not find Property \'buildNum\'\nThis might occur an fatal error");
				
				Version = MC_VERSION + "-" + major + "." + minor + "." + patch + "." + buildNum;
			}
		}
		
		catch (FileNotFoundException e) {
			logger.warn("Could not find \'version.properties\'\n" +
					    "The Version is automatically set to DEBUG", e); 
		}
		
		catch (IOException e) {
			logger.fatal("An fatal error occured during loading \'version.properties\'", e);
		}
		
		logger.info("Current Version: " + Version);
		
	}
	
}
